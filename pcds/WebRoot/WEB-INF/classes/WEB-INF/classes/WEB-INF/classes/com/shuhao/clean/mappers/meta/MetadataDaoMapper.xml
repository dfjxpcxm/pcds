<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.shuhao.clean.apps.meta.dao.MetadataDao">
	
	<resultMap id="categoryMap" type="UppMetadataCategory">
		<id property="md_cate_cd" column="md_cate_cd"/>
		<result property="md_cate_name" column="md_cate_name"/>
		<result property="is_display" column="is_display"/>
		<result property="display_order" column="display_order"/>
		<result property="icon_path" column="icon_path"/>
		<result property="md_cate_desc" column="md_cate_desc"/>
		
		<collection property="relaDefList" javaType="ArrayList" ofType="UppMetadataRelaDef">
			<id property="prt_md_cate_cd" column="prt_md_cate_cd"/>
			<id property="md_cate_cd" column="allow_add_cate"/>
			<result property="allow_child_cnt" column="allow_child_cnt"/>
		</collection>
	</resultMap>
	
	<resultMap id="uppMetadataMap" type="UppMetadata">
		<id property="metadata_id" column="metadata_id"/>
		<result property="prt_metadata_id" column="prt_metadata_id"/>
		<result property="metadata_name" column="metadata_name"/>
		<result property="md_cate_cd" column="md_cate_cd"/>
		<result property="status_cd" column="status_cd"/>
		<result property="is_display" column="is_display"/>
		<result property="create_user_id" column="create_user_id"/>
		<result property="create_time" column="create_time"/>
		<result property="update_time" column="update_time"/>
		<result property="display_order" column="display_order"/>
		<result property="metadata_desc" column="metadata_desc"/>
		<result property="is_leaf" column="is_leaf"/>
		<association property="category" resultMap="categoryMap"></association>
	</resultMap>
	
	<!-- 根据父节点查询元数据列表   去掉下面排序, a.metadata_name, b.display_order-->
	<select id="queryMetadataByParentId" parameterType="string" resultMap="uppMetadataMap">
		select
			a.metadata_id,
			a.prt_metadata_id,
			a.metadata_name,
			a.md_cate_cd,
			a.status_cd,
			a.is_display,
			a.display_order,
			a.create_user_id,
			a.create_time,
			a.update_user_id,
			a.update_time,
			a.metadata_desc,
			b.md_cate_name,
			b.is_display,
			b.display_order,
			b.icon_path,
			b.md_cate_desc,
			case 
				when c.prt_metadata_id is null then 'Y' 
                else 'N' 
            end  is_leaf
		from upp_metadata a 
		 left join(select distinct prt_metadata_id from  upp_metadata)  c
       		on c.prt_metadata_id = a.metadata_id
		 ,upp_metadata_category b
		where a.md_cate_cd = b.md_cate_cd
			and a.prt_metadata_id = #{prt_metadata_id}
		order by a.md_cate_cd, a.display_order
	</select>
	
	<!-- 根据id获取元数据 -->
	<select id="getMetadataById" parameterType="string" resultType="UppMetadata">
		select
			a.metadata_id,
			a.prt_metadata_id,
			a.metadata_name,
			a.md_cate_cd,
			a.status_cd,
			a.is_display,
			a.display_order,
			a.create_user_id,
			a.create_time,
			a.update_user_id,
			a.update_time,
			a.metadata_desc
		from upp_metadata a
		where a.metadata_id =  #{metadata_id}
	</select>
	
	<!-- 查询元数据类型列表 -->
	<select id="listMetadataCategory" resultMap="categoryMap">
		select
			a.md_cate_cd,
			a.md_cate_name,
			a.is_display,
			a.display_order,
			a.icon_path,
			a.md_cate_desc,
			b.prt_md_cate_cd,
			b.md_cate_cd as allow_add_cate,
			b.allow_child_cnt
		from upp_metadata_category a, upp_metadata_rela_def b
		where a.md_cate_cd = b.prt_md_cate_cd
		order by a.md_cate_cd
	</select>
	
	<!-- 添加元数据 -->
	<insert id="addMetadata" parameterType="UppMetadata">
		insert into upp_metadata (
			metadata_id,
			prt_metadata_id,
			metadata_name,
			md_cate_cd,
			status_cd,
			is_display,
			display_order,
			create_user_id,
			create_time,
			update_user_id,
			update_time,
			metadata_desc
		) values (
			#{metadata_id},
			#{prt_metadata_id},
			#{metadata_name},
			#{md_cate_cd},
			#{status_cd},
			#{is_display},
		 	#{display_order jdbcType=INTEGER},
			<!-- #{display_order jdbcType=VARCHAR}, -->
			#{create_user_id},
			now(),
			#{update_user_id jdbcType=VARCHAR},
			#{update_time jdbcType=DATE},
			#{metadata_desc jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 保存元数据信息 -->
	<update id="saveMetadata" parameterType="UppMetadata">
		update 
			upp_metadata a
		set
			a.metadata_name = #{metadata_name},
			a.metadata_desc = #{metadata_desc jdbcType=VARCHAR},
			a.update_user_id = #{update_user_id},
			a.update_time = now()
			<if test="display_order!=null and display_order != ''">
				,a.display_order=#{display_order}
			</if>
		where a.metadata_id = #{metadata_id}
	</update>
	
	<!-- 修改元数据展示顺序 -->
	<update id="updateDisplayOrder" parameterType="UppMetadata">
		update 
			upp_metadata a
		set
			a.display_order = #{display_order}
		where a.metadata_id = #{metadata_id}
	</update>
	
	<!-- 删除元数据 -->
	<delete id="deleteMetadata" parameterType="string">
		<!-- delete from upp_metadata a where a.metadata_id = #{metadata_id}  -->
		 delete from upp_metadata  where metadata_id = #{metadata_id}
	</delete>
	
	<!-- 批量删除元数据 -->
	<delete id="deleteMetadataBatch" parameterType="map">
		delete from upp_metadata  where metadata_id in (${del_para_str})
	</delete>
	
	<!-- 根据上级元数据id删除下级元数据记录 -->
	<delete id="deleteMetadataByParentId" parameterType="string">
		delete from upp_metadata  where  metadata_id = #{parent_metadata_id}
	</delete>
	
	<!-- 是否有下级元数据 -->
	<select id="hasSubMeta" parameterType="string" resultType="boolean">
		select count(*) from upp_metadata a where a.prt_metadata_id = #{metadata_id}
	</select>
	
	<!-- 按类别查询子元数据 -->
	<select id="querySubMetadataByMdCate" parameterType="map" resultType="UppMetadata">
		select
			a.metadata_id,
			a.prt_metadata_id,
			a.metadata_name,
			a.md_cate_cd,
			a.status_cd,
			a.is_display,
			a.display_order,
			a.create_user_id,
			a.create_time,
			a.update_user_id,
			a.update_time,
			a.metadata_desc
		from upp_metadata a
		where a.prt_metadata_id =  #{prt_metadata_id}
		   and a.md_cate_cd =  #{md_cate_cd}
	</select>
	
	<!-- 查询引用元数据 -->
	<select id="queryReferMetadata" parameterType="string" resultMap="uppMetadataMap">
		select
			a.metadata_id,
			a.prt_metadata_id,
			a.metadata_name,
			a.md_cate_cd,
			a.status_cd,
			a.is_display,
			a.display_order,
			a.create_user_id,
			a.create_time,
			a.update_user_id,
			a.update_time,
			a.metadata_desc,
			c.md_cate_name,
			c.is_display,
			c.display_order,
			c.icon_path,
			c.md_cate_desc
		from upp_metadata a, upp_dic_fn_rela b, upp_metadata_category c
		where a.metadata_id = b.metadata_id
			and a.md_cate_cd = c.md_cate_cd
			and b.db_obj_id = #{metadata_id}
		order by a.metadata_id
	</select>
	
	<!-- 删除元数据映射关系 -->
	<delete id="deleteMetaRela" parameterType="UppDicRela">
		delete from upp_dic_fn_rela where metadata_id = #{metadata_id} and db_obj_id = #{db_obj_id}
	</delete>
</mapper>
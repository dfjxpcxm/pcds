<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.shuhao.clean.apps.meta.dao.PageButtonDao">
	
	<!-- 添加页面结构对象 -->
	<insert id="addPageButton" parameterType="UppPageButton">
		insert into upp_page_button (
			button_id,
			button_name,
			md_cate_cd,
			button_func_cd,
			icon_path,
			rela_metadata_id,
			is_customer_sql,
			dml_sql
		) values (
			#{button_id,jdbcType=VARCHAR},
			#{button_name,jdbcType=VARCHAR},
			#{md_cate_cd,jdbcType=VARCHAR},
			#{button_func_cd,jdbcType=VARCHAR},
			#{icon_path,jdbcType=VARCHAR},
			#{rela_metadata_id,jdbcType=VARCHAR},
			#{is_customer_sql,jdbcType=VARCHAR},
			#{dml_sql,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 根据id获取页面结构对象 -->
	<select id="getPageButtonById" parameterType="string" resultType="UppPageButton">
		select 
			a.button_id,
			a.button_name,
			a.md_cate_cd, 
			a.button_func_cd,
			a.icon_path,
			a.rela_metadata_id,
			a.is_customer_sql,
			a.dml_sql
		from upp_page_button a
		where a.button_id = #{button_id,jdbcType=VARCHAR}
	</select>
	
	<!-- 保存页面结构对象 -->
	<update id="savePageButton" parameterType="UppPageButton">
		update 
			upp_page_button a
		set
			a.button_name = #{button_name,jdbcType=VARCHAR},
			a.md_cate_cd = #{md_cate_cd,jdbcType=VARCHAR}, 
			a.button_func_cd = #{button_func_cd,jdbcType=VARCHAR},
			a.icon_path = #{icon_path,jdbcType=VARCHAR},
			a.rela_metadata_id = #{rela_metadata_id,jdbcType=VARCHAR},
			a.is_customer_sql = #{is_customer_sql,jdbcType=VARCHAR},
			a.dml_sql = #{dml_sql,jdbcType=VARCHAR}
		where a.button_id = #{button_id,jdbcType=VARCHAR}
	</update>
	
	<!-- 删除页面结构对象 -->
	<delete id="deletePageButton" parameterType="string">
		delete from upp_page_button where button_id = #{button_id}
	</delete>
	
	<!-- 批量删除页面按钮对象 -->
	<delete id="deletePageButtonBatch" parameterType="map">
		delete from upp_page_button where button_id in (${del_para_str})
	</delete>
	
	<!-- 查询关联元数据-->
	<select id="queryRelaMetadata" parameterType="map" resultType="map">
		select 
			a.metadata_id rela_metadata_id,
			a.metadata_name rela_metadata_name
		from upp_metadata a
		where a.md_cate_cd = #{md_cate_cd,jdbcType=VARCHAR}
		  and a.prt_metadata_id = #{prt_metadata_id,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据id获取页面结构对象 -->
	<select id="queryPageButtons" parameterType="map" resultType="map">
		select 
			a.button_id,
			a.button_name,
			a.md_cate_cd, 
			a.button_func_cd,
			b.button_func_name,
			a.icon_path,
			a.rela_metadata_id,
			c.metadata_name rela_metadata_name,
			a.is_customer_sql
		from upp_page_button a
		left join upp_button_function b
			on a.button_func_cd = b.button_func_cd
		left join upp_metadata c
		    on a.rela_metadata_id = c.metadata_id
	    left join upp_metadata d
	    on a.button_id = d.metadata_id
		where a.button_id in(
			  select metadata_id from upp_metadata d where d.prt_metadata_id = #{prt_metadata_id,jdbcType=VARCHAR}
		)
		order by d.display_order
	</select>
	
	<!--  获取字段顺序列表 -->
	<select id="getButtonsForDisOrder" parameterType="map" resultType="map">
		select 
			a.button_id,
			a.button_name,
			b.button_func_name,
			c.display_order
		from upp_page_button a
		left join upp_button_function b
			on a.button_func_cd = b.button_func_cd,
			 upp_metadata c
		where a.button_id = c.metadata_id
		  and c.prt_metadata_id = #{prt_metadata_id,jdbcType=VARCHAR}
		  and c.md_cate_cd = #{md_cate_cd,jdbcType=VARCHAR}
		order by c.display_order
	</select>  
	
	<!--  更新排序 -->
	<update id="updateDisOrder" parameterType="map">
		update upp_metadata a
		set a.display_order = #{display_order,jdbcType=VARCHAR},
			a.update_user_id = #{user_id,jdbcType=VARCHAR},
		    a.update_time = now()
		where a.metadata_id = #{metadata_id,jdbcType=VARCHAR}
	</update>
	
</mapper>
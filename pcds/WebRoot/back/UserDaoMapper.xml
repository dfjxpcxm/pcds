<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shuhao.clean.apps.sys.dao.UserDao">
	
	<!-- 分页查询数据Sql头 -->
	<sql id="pageDataHeader">
		select * from (select rownum as frameworkRownum, t1.* from (
	</sql>
	
	<!-- 分页查询数据Sql尾 -->
	<sql id="pageDataEnd">
		<![CDATA[
			) t1) where frameworkRownum between #{start} and #{endrow}
		]]>
	</sql>
	
	<!-- 查询总数Sql头 -->
	<sql id="totalCountHeader">
		select count(*) from (
	</sql>
	
	<!-- 查询总数Sql头尾-->
	<sql id="totalCountEnd">
		) total
	</sql>
	
	<!-- 通过查询条件,查询出用户列表 -->
	<select id="listUsers" parameterType="map" resultType="hashmap">
		<include refid="pageDataHeader"/>
		select a.*
		  from opm_sys_user_info a
		 where 1=1
		 <if test="owner_org_id != null and owner_org_id != ''">
			and a.owner_org_id = '${owner_org_id}' 
		</if>
		<if test="user_id != null and user_id != ''">
			and a.user_id like '%${user_id}%' 
		</if>
		<if test="cust_mgr_id != null and cust_mgr_id != ''">
			and cust_mgr_id like '%${cust_mgr_id}%' 
		</if>
		<if test="user_name != null and user_name != ''">
			and a.user_name like '%${user_name}%' 
		</if>
			order by a.user_id as a
		<include refid="pageDataEnd"/>
	</select>
	
	<!-- 通过查询条件,查询出用户列表总记录数 -->
	<select id="getUsersCount" parameterType="map" resultType="string">
		<include refid="common.totalCountHead"/>
		select a.*
		  from opm_sys_user_info a
		 where 1=1
		 <if test="owner_org_id != null and owner_org_id != ''">
			and a.owner_org_id = '${owner_org_id}' 
		</if>
		<if test="user_id != null and user_id != ''">
			and a.user_id like '%${user_id}%' 
		</if>
		<if test="user_name != null and user_name != ''">
			and a.user_name like '%${user_name}%' 
		</if>
			
		<include refid="common.totalCountEnd"/>
	</select>
	
	<!-- 添加用户 -->
	<insert id="addUser" parameterType="SysUserInfo">
		insert into opm_sys_user_info(
			user_id             ,
			password            ,
			user_name           ,
			owner_org_id        ,
			bank_org_id         ,
			job_seq_code        ,
			job_title_code      ,
			post_type_code      ,
			technical_title_code,
			busi_line_id        ,
			join_date           ,
			employee_id         ,
			leave_date          ,
			id_card             ,
			born_date           ,
			gender_code         ,
			nation_code         ,
			education_code      ,
			telephone           ,
			address             ,
			email               ,
			postal              ,
			begin_date          ,
			end_date            ,
			status_code         ,
			remark              

		) values (
			#{user_id,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR},
			#{user_name,jdbcType=VARCHAR},
			#{owner_org_id,jdbcType=VARCHAR},
			#{bank_org_id,jdbcType=VARCHAR},
			#{job_seq_code,jdbcType=VARCHAR},
			#{job_title_code,jdbcType=VARCHAR},
			#{post_type_code,jdbcType=VARCHAR},
			#{technical_title_code,jdbcType=VARCHAR},
			<!-- #{busi_line_code,jdbcType=VARCHAR}, -->
			 #{busi_line_id,jdbcType=VARCHAR},
			str_to_date('${join_date}','%Y-%m-%d'),
			#{employee_id,jdbcType=VARCHAR},
			str_to_date('${leave_date}','%Y-%m-%d'),
			#{cert_id,jdbcType=VARCHAR},
			str_to_date('${born_date}','%Y-%m-%d'),
			#{gender_code,jdbcType=VARCHAR},
			#{ethnicity_code,jdbcType=VARCHAR},
			#{edu_back_code,jdbcType=VARCHAR},
			#{user_mobile,jdbcType=VARCHAR},
			#{user_address,jdbcType=VARCHAR},
			#{user_email,jdbcType=VARCHAR},
			#{postal,jdbcType=VARCHAR},
			str_to_date('${begin_date}','%Y-%m-%d'),
			str_to_date('${end_date}','%Y-%m-%d'),          
			#{user_status,jdbcType=VARCHAR},
			#{remark,jdbcType=VARCHAR}
				
			)
	</insert>
	
	<!-- 删除用户 -->
	<delete id="removeUser" parameterType="string">
		delete from opm_sys_user_info where user_id = #{userID}
	</delete>
	
	<!-- 修改用户信息 -->
	<update id="updateUser" parameterType="SysUserInfo">
		update opm_sys_user_info set
			password            = #{password,jdbcType=VARCHAR},
			user_name           = #{user_name,jdbcType=VARCHAR},
			owner_org_id        = #{owner_org_id,jdbcType=VARCHAR},
			bank_org_id         = #{bank_org_id,jdbcType=VARCHAR},
			job_seq_code        = #{job_seq_code,jdbcType=VARCHAR},
			job_title_code      = #{job_title_code,jdbcType=VARCHAR},
			post_type_code      = #{post_type_code,jdbcType=VARCHAR},
			technical_title_code= #{technical_title_code,jdbcType=VARCHAR},
			<!-- busi_line_id        = #{busi_line_code,jdbcType=VARCHAR}, -->
			
			busi_line_id        = #{busi_line_id,jdbcType=VARCHAR},
			join_date           = str_to_date('${join_date}','%Y-%m-%d'),
			employee_id         = #{employee_id,jdbcType=VARCHAR},
			leave_date          = str_to_date('${leave_date}','%Y-%m-%d'),
			id_card             = #{id_card,jdbcType=VARCHAR},
			born_date           = str_to_date('${born_date}','%Y-%m-%d'),
			gender_code         = #{gender_code,jdbcType=VARCHAR},
			nation_code         = #{ethnicity_code,jdbcType=VARCHAR},
			education_code      = #{edu_back_code,jdbcType=VARCHAR},
			telephone           = #{telephone,jdbcType=VARCHAR},
			address             = #{address,jdbcType=VARCHAR},
			email               = #{email,jdbcType=VARCHAR},
			postal              = #{postal,jdbcType=VARCHAR},
			begin_date          = str_to_date('${begin_date}','%Y-%m-%d'),
			end_date            = str_to_date('${end_date}','%Y-%m-%d'),
			status_code         = #{status_code,jdbcType=VARCHAR},
			remark              = #{remark,jdbcType=VARCHAR}
		where user_id=#{user_id}
	</update>
	
	<!-- 根据用户ID查找用户 
		select t.cust_mgr_id user_id,
		       t.paswd password,
		       t.user_name,
		       t.owner_org_id,
		       t.bank_org_id,
		       t.busi_line_id,
		       t.id_card,
		       to_char(t.born_date, 'yyyy-mm-dd') born_date,
		       to_char(t.begin_date, 'yyyy-mm-dd') begin_date,
		       a.bank_org_name as owner_org_name,
		       b.bank_org_name as bank_org_name,
		       t.khdx_role_id
		  from opm_sys_user_info t
		  left join dmd_bank_inter_org a
		    on t.owner_org_id = a.bank_org_id
		  left join dmd_bank_inter_org b
		    on t.bank_org_id = b.bank_org_id
		 where t.cust_mgr_id=#{userID}
		 -->
	<select id="findUserById" parameterType="string" resultType="SysUserInfo">
		select t.user_id user_id,
	           t.password,
	           t.user_name,
	           t.post_id as post_type_code, 
	           '8888' owner_org_id,
	           '8888' bank_org_id, 
	           '总行' as owner_org_name,
	           '总行' as bank_org_name 
	      from sys_user_info t 
			 where t.user_id=#{userID}
	</select>
	
	<!-- 修改用户密码 -->
	<update id="modifyPassword" parameterType="map">
		update opm_sys_user_info set password=#{password} where user_id=#{user_id}
	</update>
	
		<!-- 删除用户与用户角色关系 -->
	<delete id="removeUserRoleRela" parameterType="SysUserInfo">
		
		delete from 
			sys_user_role_rela 
		where 
			user_id = #{user_id}
			<!-- delete from 
			opm_sys_user_role a
		where 
			user_id = #{user_id} -->
			
		<!-- 
		and	exists(
				select
					0
				from
					opm_sys_role_info b
				where	
					a.role_id = b.role_id
				and	b.bank_org_id = #{bank_org_id})
		 -->			
	</delete>
	
	<!-- 初始页 -->
	<delete id="deleteInitPage" parameterType="string">
		delete from bsc_user_dft_page where user_id = #{userID}
	</delete>
	
	<!-- 添加用户角色 -->
	<insert id="addUserRole" parameterType="map">
		insert into opm_sys_user_role(user_id,role_id)values(#{user_id},#{role_id})
	</insert>
	
	<!-- 根据用户ID获取用户角色 -->
	<select id="getUserRole" parameterType="map" resultType="map">
		select
			a.role_id,
			a.role_name,
			'1' checked
		from
			opm_sys_role_info a,
			opm_sys_user_role b
		where 1=1
		and a.role_id = b.role_id
		and	b.user_id = #{user_id}
		union
		select
			a.role_id,
			a.role_name,
			case when b.role_id is not null then '1' else '0' end checked
		from	
			opm_sys_role_info a
				left join 
					opm_sys_user_role b 
				on 
					a.role_id = b.role_id
				and b.user_id = #{user_id}
		where 1=1
	</select>
	
	<!-- 插入用户与角色关系 -->
	<insert id="insertUserRoleRela" parameterType="map">
		insert into opm_sys_user_role(user_id,role_id) values(#{user_id},#{role_id})
	</insert>
	
	<select id="checkPassword" parameterType = "SysUserInfo" resultType="int">
		<include refid="common.totalCountHead"/>
		select * from opm_sys_user_info t where t.user_id = #{user_id} and t.password = #{password}
		<include refid="common.totalCountEnd"/>
	</select>
	
	<!-- 获取当前用户的菜单树 -->
	<select id="getCurrentUserResourceList" parameterType="map" resultType="SysResourceInfo">
		select 
			a.*
		from 
			opm_sys_resource a 
		where  
			exists(
				select 
					0
				from
					opm_sys_user_info b,
					opm_sys_user_role c,
					opm_sys_role_gra d
				where
					b.user_id = c.user_id
				and	c.role_id = d.role_uuid
				and	d.resource_uuid = a.resource_uuid
				and b.user_id = #{current_user_id}
			)
		order by resource_id
	</select>
	
	<!-- 获取当前用户的菜单树   用于用户登陆初始化用户权限菜单-->
	<select id="getLoginUserResource" parameterType="map" resultType="map">
		select t.* from (select  m.resource_id,m.parent_resource_id,m.resource_name,handler,icon_class, rownum r from (select * from opm_sys_resource c where c.uuid in ( select b.resource_uuid from opm_sys_role_gra b where b.role_uuid in ( select a.role_uuid from opm_sys_user_role a where a.user_id = #{current_user_id} ))) m start with m.parent_resource_id = 'root'  connect by prior m.resource_id = m.parent_resource_id ) t
	</select>
	
	<delete id="deleteSpeciallyAuthorize" parameterType="map">
		delete a from
			bsc_user_spec_priv a
		where
			a.user_id = #{user_id}
		<if test="bank_id != null and bank_id != ''"><!-- 删除用户时删除用的特殊授权（bank_id为空） -->
		and	a.bank_org_id = #{bank_id}
		and exists(
				select 
					0
				from
					opm_sys_user_info b,
					opm_sys_user_role c,
					bsc_role_resource_rela d
				where
					b.user_id = c.user_id
				and	c.role_id = d.role_id
				and	d.resource_id = a.resource_id
				and b.user_id = #{current_user_id}
			)
		</if>
	</delete>
	
	<insert id="saveSpeciallyAuthorize" parameterType="map">
		insert into 
			bsc_user_spec_priv
		values(#{user_id},#{bank_id},#{resource_id})
	</insert>
	
	
	<delete id="deleteRoleByUserIdAndBankOrgId" parameterType="map">
		delete a from
			opm_sys_user_role a
		where
			a.user_id = #{user_id}
		and	exists(
				select 
					0
				from
					opm_sys_role_info b
				where	
					a.role_id = b.role_id
				and	b.bank_org_id = #{bank_id}
				)
	</delete>
</mapper>
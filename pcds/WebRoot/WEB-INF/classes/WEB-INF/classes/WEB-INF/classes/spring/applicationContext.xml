<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
        >
	
	<!-- 自动扫描组件，需要把controller去掉，否则影响事务管理 -->
    <context:component-scan base-package="com.shuhao.clean">  
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan> 
	 
	<!-- 加载jdbc.properties 
	<context:property-placeholder location="classpath:spring/jdbc_oracle_local.properties" ignore-unresolvable="true"/>
	-->
	<context:property-placeholder location="classpath:spring/jdbc_oracle.properties" ignore-unresolvable="true"/>
	 
	<!-- 强制CGLIB代理 -->
	<aop:config proxy-target-class="true" />
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
	
	<!-- 配置c3p0数据源 	-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${c3p0.acquireRetryDelay}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${c3p0.acquireRetryAttempts}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${c3p0.checkoutTimeout}</value>
		</property>
	</bean> 
	
	 
	
	<!-- 配置Weblogic JNDI数据源 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" >
		<property name="jndiName">
			<value>JDBC_SH_OPMADM</value>
		</property>
	</bean>
	-->
	
	<!-- JDBC 事务处理Manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	
	<!-- JDBC 编程式事务处理模板 -->
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
	</bean>

	<!-- 声明式事物处理Manager -->
	<tx:advice id="transactionTx" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 以如下关键字开头的方法使用事物 -->
			<tx:method name="add*" />
			<tx:method name="save*" />
			<tx:method name="update*" />
			<tx:method name="edit*" />
			<tx:method name="delete*" />
			<tx:method name="remove*" />
			<tx:method name="call*" propagation="NOT_SUPPORTED" />
			<tx:method name="get*" propagation="NOT_SUPPORTED" />
			<tx:method name="query*" propagation="NOT_SUPPORTED" />
			<!-- 其他方法不使用事物 -->
			<tx:method name="*" propagation="NOT_SUPPORTED" />
		</tx:attributes>
	</tx:advice>

	<!-- 声明式事物处理-->
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="within(com.shuhao.clean..service.impl.*)" />
		<aop:advisor advice-ref="transactionTx" pointcut-ref="servicePointcut" />
	</aop:config>
    
    <!-- mybatis集成  配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:/mybatis/mybatis-conf.xml</value>
		</property>
		<!-- com.shuhao.clean.apps.base.entity下的实体自动创建别名 -->
		<property name="typeAliasesPackage">
			<value>
				com.shuhao.clean.apps.base.entity,
				com.shuhao.clean.apps.meta.entity
			</value>
		</property>
		<property name="mapperLocations">
			<list>
				<!-- 应用映射 -->
				<value>classpath*:com/shuhao/clean/mappers/**/*.xml</value>
				<!-- 外部模块映射 -->
				<value>classpath*:com/shuhao/clean/toolkit/**/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 自动装配 mapper 扫描basePackage下所有以@MyBatisDao标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.shuhao.clean.apps,com.shuhao.clean.toolkit" />
    	<property name="annotationClass" value="com.shuhao.clean.annotation.MyBatisDao"/>
    </bean>
    
     <!-- 为兼容以前老版本 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
    
 	<!-- BasDao 注入数据源和事物处理模板  kpi专用 -->
	<bean id="baseDao" class="com.shuhao.clean.base.BaseDao" abstract="true">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="transactionTemplate">
			<ref local="transactionTemplate" />
		</property>
	</bean>
	
	
	
 
 	<!-- 日志管理 
	<import resource="userVisitLog.xml"/>
	-->
	<!-- 缓存配置 -->
	<import resource="applicationContext-cache.xml"/>
	<!-- 连接池管理 -->
	<import resource="applicationContext-ds.xml" />
	<!-- spring 管理实体bean -->
	<import resource="applicationContext-bean.xml" />
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shuhao.clean.apps.meta.dao.TableManageDao">
	
	<!-- 查询数据库 -->
	<select id="getDataBaseList" parameterType="map" resultType="hashmap">
		select database_id,database_name from upp_database
	</select>
	
	<!-- 查询数据库用户 -->
	<select id="getOwnerList" parameterType="map" resultType="hashmap">
		select * from upp_database_user 
		 <if test="database_id!=null and database_id!=''">
		 		where database_id = #{database_id}
		  </if>		
	</select>
	
	<sql id='localTableSql'>
		select a.table_id,
		       a.table_name,
		       a.theme_id,
		       a.table_desc,
		       a.display_order,
		       a.db_user_id,
		       a.database_id,
		       a.tablespace_id,
		       a.status_code,
		       case when a.status_code='01' then '禁用' else  
		       		case when a.status_code='02' then '正常' else '删除' end
		       end as statue_desc ,
		       a.is_exist,
		       case when a.is_display='Y' then '显示' else '隐藏' end as displayDesc,
		       a.is_display,
		       a.display_order,
		       d.theme_name,
		       b.database_name,
		       c.owner_name,
		       e.tablespace_name
		  from upp_table a, upp_database b, upp_database_user c,upp_theme d, upp_tablespace e
		 where a.database_id = b.database_id
		   and a.db_user_id = c.db_user_id
		   and a.theme_id=d.theme_id
		   and a.tablespace_id=e.tablespace_id
		   <if test="database_id!=null and database_id!=''">
			   and a.database_id = #{database_id}
		   </if>
		    <if test="db_user_id!=null and db_user_id!=''">
			    and a.db_user_id = #{db_user_id}
		   </if>
		   order by a.display_order 
	</sql>
	<!-- 查询数据库用户 -->
	<select id="getLocalTableList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingHead"/>
		<include refid="localTableSql"/>
		<include refid="common.pagingEnd"/>
		
	</select>
	
	<select id="getLocalTableCount" parameterType="map" resultType="int">
		<include refid="common.totalCountHead"/>
		<include refid="localTableSql"/>
		<include refid="common.totalCountEnd"/>
	</select>
	
	
	<select id="getLocalTableInfo" parameterType="map" resultType="hashmap">
		<choose>
			<when test="type=='t1'">
				 select   a.column_id,a.table_id,a.column_name,a.column_desc,a.data_type_code,
				 		  a.column_type_code,a.data_length,a.data_scale,a.is_editable,a.is_nullable,
				 		  a.default_value,a.display_order,a.is_display ,b.data_type_name,c.column_type_name
				 from upp_table_columns  a 
				 left join  upp_data_type b on a.data_type_code = b.data_type_code
       			 left join  upp_column_type c on a.column_type_code = c.column_type_code
				<if test="table_id!=null and table_id!=''">
					where a.table_id=#{table_id}
				</if>
			</when>
			
			<when test="type=='t2'">
				select * from upp_table_constraints 
				<if test="table_id!=null and table_id!=''">
					where constraints_id=#{table_id}
				</if>
			</when>
		</choose>
	</select>
	
	
	<select id="getTableSpaceList" parameterType="map" resultType="hashmap">
		select a.tablespace_id, a.tablespace_name
		  from upp_tablespace a
		  <if test="database_id!=null and database_id!=''">
		 		where a.database_id = #{database_id}
		  </if>
		 order by a.display_order
	</select>
	
	<select id="getThemeList" parameterType="hashmap" resultType="hashmap">
		select * from upp_theme
	</select>
	
	<select id="getConTableTypeList" parameterType="hashmap" resultType="hashmap">
		select * from upp_column_type
	</select>
	
	<select id="getDataTypeList" parameterType="hashmap" resultType="hashmap">
		select * from upp_data_type
	</select>
	
	<insert id="addTable" parameterType="hashmap">
		<if test="display_order==null or display_order==''">
			insert into upp_table(table_id,db_user_id,database_id,tablespace_id,
				table_name,table_desc,theme_id,status_code,is_exist,is_display,display_order)
			select #{table_id},#{db_user_id},#{database_id},
	    		#{tablespace_id} ,#{table_name},#{table_desc,jdbcType=VARCHAR},
	    		#{theme_id,jdbcType=VARCHAR},
	    		#{status_code,jdbcType=VARCHAR},'Y',#{is_display,jdbcType=VARCHAR},
	    		(select count(1)+1 from upp_table ) from dual 
		</if>
		
		<if test="display_order!=null and display_order!=''">
			insert into upp_table(table_id,db_user_id,database_id,tablespace_id,
				table_name,table_desc,theme_id,status_code,is_exist,is_display,display_order)
			select #{table_id},#{db_user_id},#{database_id},
	    		#{tablespace_id} ,#{table_name},#{table_desc,jdbcType=VARCHAR},
	    		#{theme_id,jdbcType=VARCHAR},
	    		#{status_code,jdbcType=VARCHAR},'Y',#{is_display,jdbcType=VARCHAR},
	    		#{display_order,jdbcType=INTEGER} from dual 
		</if>
		
	</insert>
	
	<update id="updateTableInfo" parameterType="hashmap">
		update upp_table set table_desc=#{table_desc,jdbcType=VARCHAR},status_code=#{status_code,jdbcType=VARCHAR},
			is_display=#{is_display,jdbcType=VARCHAR},display_order=#{display_order,jdbcType=INTEGER},
			theme_id=#{theme_id,jdbcType=VARCHAR},table_name=#{table_name,jdbcType=VARCHAR},database_id=#{database_id,jdbcType=VARCHAR},
			tablespace_id=#{tablespace_id,jdbcType=VARCHAR},db_user_id=#{db_user_id,jdbcType=VARCHAR}
  		where table_id=#{table_id,jdbcType=VARCHAR}
		
			
	</update>

	<delete id="deleteTableField" parameterType="hashmap">
		delete from upp_table_columns where table_id=#{table_id}
	</delete>
	
	<delete id="deleteField" parameterType="hashmap">
		delete from upp_table_columns where column_id=#{column_id}
	</delete>
	
	<insert id="addTableField" parameterType="hashmap">
			 insert into upp_table_columns
			    (table_id,
			     column_id,
			     column_name,
			     column_desc,
			     data_type_code,
			     column_type_code,
			     data_length,
			     data_scale,
			     is_editable,
			     is_nullable,
			     default_value,
			     display_order,
			     is_display)
			  values
			    (#{table_id,jdbcType=VARCHAR},#{column_id,jdbcType=VARCHAR},#{column_name,jdbcType=VARCHAR},
			     #{column_desc,jdbcType=VARCHAR},#{data_type_code,jdbcType=VARCHAR},#{column_type_code,jdbcType=VARCHAR},#{data_length,jdbcType=INTEGER},
			     #{data_scale,jdbcType=INTEGER},#{is_editable,jdbcType=VARCHAR},#{is_nullable,jdbcType=VARCHAR},#{default_value,jdbcType=VARCHAR},#{display_order,jdbcType=INTEGER},#{is_display,jdbcType=VARCHAR})
			
	</insert>
	
	<delete id="deleteTable" parameterType="hashmap">
		delete from upp_table where table_id=#{table_id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="addDicFnRela" parameterType="UppDicFnRela">
		insert into upp_dic_fn_rela (metadata_id,db_obj_id)
			  values
			    ( #{metadata_id,jdbcType=VARCHAR}, #{db_obj_id,jdbcType=VARCHAR} )
	</insert>
	
	<delete id="deleteDicFnRela" parameterType="UppDicFnRela">
		delete from upp_dic_fn_rela  where db_obj_id=#{db_obj_id,jdbcType=VARCHAR}
	</delete>
	
	<!--根据业务元数据查询功能元数据  -->
	<select id="getFnMetaId" parameterType="hashmap" resultType="hashmap">
		select b.fn_metadata_id as fn_metadata_id,c.metadata_cate_code 
		  from upp_metadata a, upp_dic_fn_rela b, upp_metadata c
		 where a.metadata_id = b.dic_metadata_id
		   and b.fn_metadata_id=c.metadata_id
		   and b.dic_metadata_id = #{metadata_id}
		   <!--  and c.metadata_cate_code='2010'-->
	</select>
	
	<update id="updateField" parameterType="hashmap">
		update upp_table_columns
		   set column_name      = #{column_name,jdbcType=VARCHAR},
		       column_desc      = #{column_desc,jdbcType=VARCHAR},
		       data_type_code   = #{data_type_code,jdbcType=VARCHAR},
		       column_type_code = #{column_type_code,jdbcType=VARCHAR},
		       data_length      = #{data_length,jdbcType=INTEGER},
		       data_scale       = #{data_scale,jdbcType=INTEGER},
		       display_order    = #{display_order,jdbcType=INTEGER},
		       is_display       = #{is_display,jdbcType=VARCHAR},
		       is_nullable      = #{is_nullable,jdbcType=VARCHAR},
		       is_editable      = #{is_editable,jdbcType=VARCHAR},
		       default_value    = #{default_value,jdbcType=VARCHAR}
		 where column_id = #{column_id,jdbcType=VARCHAR}
	</update>
	
	<select id="getTableDataCount" parameterType="hashmap" resultType="int">
		select count(1) from ${table_name} 
	</select>
	
	<!-- 依次删除  表,表字段,表字段与页面字段,功能,元数据中页面字段,元数据中表字段,元数据中表,元数据中表对应功能页面,表与功能页面 -->
	<select id="deleteTableGlInfo" parameterType="map">
		<![CDATA[
		BEGIN
			delete from upp_table where table_id=#{table_id};
			delete from upp_table_columns where column_id in (select metadata_id from upp_metadata where parent_metadata_id = #{table_id});
			delete from upp_dic_fn_rela where dic_metadata_id in (select metadata_id from upp_metadata where parent_metadata_id = #{table_id});
			delete from upp_fn_metadata_property where metadata_id in (
					select metadata_id from upp_metadata where parent_metadata_id 
					       in (select fn_metadata_id from upp_dic_fn_rela where dic_metadata_id = #{table_id})
					);
			delete from upp_metadata where parent_metadata_id in (select fn_metadata_id from upp_dic_fn_rela where dic_metadata_id = #{table_id});
			delete from upp_metadata where parent_metadata_id = #{table_id};
			delete from upp_metadata where metadata_id = #{table_id};
			delete from upp_metadata where metadata_id in (select fn_metadata_id from upp_dic_fn_rela where dic_metadata_id = #{table_id});
			delete from upp_dic_fn_rela where dic_metadata_id = #{table_id};
		END;
		]]>
	</select>
</mapper>